@model FirstProject.Models.ViewModels.PermissionViewModel

@{
    ViewData["Title"] = "Permission";
    Layout = "_Layout";
}

<div class="container">
    @if (ViewData["RemoveError"] is not null)
    {
        <p class="text-danger">
            @ViewData["RemoveError"]
        </p>
    }
    @if (ViewData["Saved"] is not null)
    {
        <p class="text-success">
            @ViewData["RemoveError"]
        </p>
    }
    <div class="row"></div>
    <div class="row">
        <div class="container">
            <div class="row">
                <div class="col-4">
                    <div class="row">
                        <h4>
                            Permission Admin Site
                        </h4>
                    </div>
                    <div class="row text-start">
                        In this page you can add user role to created previously policy.
                        At the middle you have all active policy and attached user roles to them, they are load
                        from AuthorizationConfig.json file. On the right you can add role to policy. If no role and policy is selected
                        clicking Reset button will cause reset all config file. RequireAdmin and RequireUser are default policy with admin and user roles
                        <br/>
                        <br/>
                        Important!
                        <br/>
                        After each change in policy you have to reset server
                        <br/>
                        Adding new policy is possible in AdminController.cs file, make sure you add this policy to _policyArray variable.
                        <br/>
                        To make use of new policy add Attribute to controller method or whole class [Authorization(Policy="Your new policy name")]
                    </div>
                    
                </div>
                <div class="col-4">
                    <div class="row">
                        <h4>
                            Actual policy in Json Config File
                        </h4>
                    </div>
                    
                    @foreach (KeyValuePair<string, List<string>> kvp in Model.JsonPolicy)
                    {
                        @:Policy name:
                            @Html.DisplayFor(v => kvp.Key)
                        
                        <p>
                            Attached roles:
                            @foreach (string a in kvp.Value)
                            {
                                @Html.DisplayFor(d => a)
                                @:&nbsp;
                            }
                        </p>
                    }
                </div>
                <div class="col-4">
                    <div class="row">
                        <h5>
                            Connect Role with Policy
                        </h5>
                    </div>
                    <form asp-action="PermissionAdd" method="get">
                        <div class="row">
                            Select Role:
                            <select asp-items="@Model.Role" name="roleName">
                                <option value="@null">-----</option>
                            </select>
                        </div>
                        <div class="row">
                            Select Policy:
                            <select asp-items="@((SelectList) ViewData["PolicySelectList"]!)" name="policyName">
                                <option value="@null">-----</option>
                            </select>
                        </div>
                        <div class="row mt-2">
                            <input type="submit" value="Add" class="btn btn-primary"/>
                        </div>
                    </form>
                    @if (Model.SelectedPermissions.Count != 0)
                    {
                        <form asp-action="PermissionRemoveAll" method="get">
                            <div class="row mt-2 mb-2">
                                <input type="submit" value="Remove All" class="btn btn-warning"/>
                            </div>
                        </form>
                    }
                    @if (Model.SelectedPermissions is not null)
                    {
                        <div class="row">
                            <table class="table table-striped table-success">
                                <thead>
                                <tr>
                                    <th>
                                        Policy Name
                                    </th>
                                    <th>
                                        Attached Role
                                    </th>
                                    <th>
                                        Options
                                    </th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (KeyValuePair<string, List<string>> kvp in Model.SelectedPermissions)
                                {
                                    <tr>
                                        <td>
                                            @kvp.Key
                                        </td>
                                        @if (kvp.Value.Count != 0)
                                        {
                                            <td>
                                                @foreach (string role in kvp.Value)
                                                {
                                                    @Html.DisplayFor(s => role)
                                                    @:&nbsp;
                                                }
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                No role attached
                                            </td>
                                        }
                                        <td>
                                            <form asp-action="PermissionRemove" method="get">
                                                <input type="hidden" name="policyName" value="@kvp.Key">
                                                <input type="submit" value="Remove"/>
                                            </form>

                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        @if (Model.SelectedPermissions is null || Model.SelectedPermissions.Count == 0)
                        {
                            <div class="row">
                                <form asp-action="PermissionSave" method="get">
                                    <input type="submit" class="btn btn-warning" value="RESET"/>
                                </form>
                            </div>  
                        }
                        else
                        {
                            <div class="row">
                                <form asp-action="PermissionSave" method="get">
                                    <input type="submit" class="btn btn-primary" value="Save"/>
                                </form>
                            </div>  
                        }

                    }
                </div>
            </div>
            
        </div>
    </div>

</div>