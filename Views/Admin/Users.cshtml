@model IEnumerable<FirstProject.Models.ViewModels.AdminUserDisplayModel>

@{
    ViewData["Title"] = "Admin - Users";
    Layout = "_Layout";
}

<div class="container">
    <div class="row">
        <form asp-action="Users" method="get">
            Search by user name:
            <input class="form-label" type="text" name="usernameSearchString" value ="@ViewData["usernameSearchString"]"/>
            Group by: 
            <select name="usersRole" asp-items="@Html.GetEnumSelectList<FirstProject.Models.UsersRolesEnum>()">
                @if (ViewData["GroupByRoles"] is not null)
                {
                    <optgroup label="Selected">
                        <option value="@ViewData["GroupByRoles"]">@Enum.GetName(typeof(UsersRolesEnum), ViewData["GroupByRoles"]!)</option>
                    </optgroup>
                }
                <optgroup label="To select">
                    <option value="@null">----------</option>
                </optgroup>
            </select>
            <input type="submit" value="Search" class="btn-success btn-sm "/>
        </form>
    </div>
    <div class="row">
        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>User Name</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>E-Mail</th>
                <th>Role</th>
                <th>Options</th>
            </tr>
            </thead>

            <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(u => user.User.Id)</td>
                    <td>@Html.DisplayFor(u => user.User.UserName)</td>
                    <td>@Html.DisplayFor(u => user.User.FirstName)</td>
                    <td>@Html.DisplayFor(u => user.User.LastName)</td>
                    <td>@Html.DisplayFor(u => user.User.Email)</td>
                    <td>
                        @if (user.Role is not null)
                        {
                            @foreach (var role in user.Role)
                            {
                                @Html.DisplayFor(u => role)
                                @: 
                            }
                        }
                        else
                        {
                            @:No roles attached
                        }

                    </td>
                    <td>

                        @if (user.Role is not null && user.Role.Contains("Admin"))
                        {
                            @:Delete
                        }
                        else
                        {
                            <a asp-controller="Admin" asp-action="Delete" asp-route-id="@user.User.Id">Delete</a>

                        }
                        <a asp-controller="Admin" asp-action="Details" asp-route-id="@user.User.Id">Roles</a>
                    </td>
                </tr>

            }
            </tbody>
        </table>

    </div>
    <div class="row text-center">
        <a asp-controller="Admin" asp-action="Index">Return to admin page</a>
    </div>
</div>